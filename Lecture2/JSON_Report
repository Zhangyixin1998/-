JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。在程序功能开发或制作前端页面时，经常会使用JSON数据保存数据，或读取JSON数据。
JSON数据格式的用法如下：
1. JSON是以“名称：值”对方式存储数据的，名称和值之间是以冒号间隔。如"firstname":"John"
2. JSON数据由花括号括起来，可以包含多个“名称：值”对，以逗号隔开。如{"firstname":"John","lastname":"Doe"}
3. JSON数据中不仅可以保存对象，还可以保存数组。
   如{
     "employees":[
                     {"firstname":"John","lastname":"Doe"}
                 ]
   }
4. 在JSON数据中数组可以保存多个对象，它们以逗号隔开，使JSON数据更加灵活。
   如{
     "employees":[
                     {"firstname":"John","lastname":"Doe"},
                     {"firstname":"Anna","lastname":"Smith"},
                 ]
   }
5. JSON数据的“名称：值”中的值可以是多种数据类型，如：数字（整数或浮点数）;字符串（在双引号中）;逻辑值（true 或 false）;数组（在方括号中）;对象（在花括号中）;null
   如{"age":45,"lastname":"Doe"},{"result":"true","lastname":"null"},{"arr":[],"cat":{}}
6. 在JS中获得JSON的值，可以通过“对象. 名称”的方式获得，例如，下面获得JSON中name的值，并把它赋予变量a。
   var JSONObject={
                   "name":"Bill Gates",
                   "street":"Fifth Avenue New York 666",
                   "age":56,
                   "phone":"1234567"
                  }
   //获得JSON中name值
   var a=JSONObject.name;
7. 获得数组对象的JSON数据，可以通过数组索引读取相应的JSON数据。例如，获得第一条JSON数据的firstName的值，可以这样获取：employees[0].firstname。
   var employees=[
                     {"firstname":"John","lastname":"Doe"},
                     {"firstname":"Anna","lastname":"Smith"},
                     {"firstname":"Bill","lastname":"Gates"},
   ];
   //数组对象中的JSON数据
   var a=employees[0].firstname;//等于John
   var b=employees[1].firstname;//等于Anna
   
JSON数据格式的优点：
1. 数据格式比较简单, 易于读写, 格式都是压缩的, 占用带宽小；
2. 易于解析这种语言, 客户端JavaScript可以简单的通过eval()进行JSON数据的读取搜索；
3. 支持多种语言, 包括ActionScript, C, C#, ColdFusion, Java, JavaScript, Perl, PHP, Python, Ruby等语言服务器端语言, 便于服务器端的解析；
4. 因为JSON格式能够直接为服务器端代码使用, 大大简化了服务器端和客户端的代码开发量, 但是完成的任务不变, 且易于维护；
